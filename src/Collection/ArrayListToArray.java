package Collection;

import java.util.ArrayList;
import java.util.List;

class ArrayListToArray {
    public static void main(String[] args) {
        // Создать списочный массив
        List<Integer> a1 = new ArrayList<>();

        // ввести элементы в списочный массив
        a1.add(1);
        a1.add(2);
        a1.add(3);
        a1.add(4);
        a1.add(5);

        System.out.println("Coдepжимoe списочного массива a1: " + a1);

        // Получить обычный массив
        Integer ia[] = new Integer[a1.size()];
        ia = a1.toArray(ia);

        int sum = 0;

        // Суммировать элементы массива
        for (int i : ia) sum += i;

        System.out.println("Сумма: " + sum);

        }
    }

/*
Она начинается с создания коллекции целых чисел. Затем вызывается метод
toArray () и получается массив элементов типа Integer. Далее содержимое
массива суммируется в цикле for в стиле for each. У этой программы имеется
еще одна любопытная особенность. Как вам должно быть уже известно, коллекции
могут содержать только ссылки, а не значения примитивных типов.
Но автоматическая упаковка позволяет передавать методу add () значения типа int,
не прибегая к необходимости заключать их в оболочку типа Integer,
 как это демонстрируется в данной программе. Таким образом, автоматическая упаковка ощутимо
облегчает сохранение в коллекциях значений примитивных типов.
 */
